  # failure case: message must be between 20 and 2000 characters
  # url: https://automationintesting.online/message/
  Scenario: Refuse a message when it's too short
    Given I want to send a message to the reception
    And the message is too short
    When I send the message
    # Then I receive an error
    Then the reception should have received the message

  # failure case: email must be valid
  # url: https://automationintesting.online/message/
  Scenario: Refuse a message when the email is invalid
    Given I want to send a message to the reception
    And the message is too short
    When I send the message
    # Then I receive an error
    Then the reception should have received the message

  # failure case Phone must be between 11 and 21 characters.

---


    # choose either Background or Before Hook
    Background:
        # base URL: https://automationintesting.online/message/
        Given the API base url is set
        # auth API: https://automationintesting.online/auth/
        And I am authenticated


    # endpoint: GET /
    Scenario: Get all messages
        # arrange
        Given I want to count all avail messages
        And there is at least 1 message
        # And: for init & test context
        # act: make request here
        # - given & get
        # - assign to outside var
        When I count all the messages
        # assert: count should be >1
        Then I receive the correct amount of messages
        # - can use JSON response's size
        # - use speczd steps
        And the response status code should be 200


    # endpoint: POST /
    Scenario: Post a message
        Given I want to post a message
        When I post a message
        Then I should read the message
        And the response status code should be 200


    # endpoint: GET /{id}
    Scenario: Get a message by ID
        Given I want to get a message
        And the message ID is {int}
        When I get the message
        Then I receive the message
        And the response status code should be 200

    # endpoint: PUT /{id}/read
    Scenario: Mark a message as read by ID
        Given I want to mark a message as read
        When I read a message
        And the message hasnt been read
        Then the message status should have changed
        And the response status code should be 200

    # endpoint: DELETE /{id}/
    Scenario: Delete a message
        Given I want to delete a message
        And the message ID is {int}
        When I delete the message
        Then I should not find the message
        And the response status code should be 200


    # endpoint: GET /count
    Scenario: Count the messages received
        Given I want to count the messages received
        When I count the messages
        And there is more than one message
        Then I should have several messages
